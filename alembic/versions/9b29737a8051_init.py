"""init

Revision ID: 9b29737a8051
Revises: 
Create Date: 2025-08-02 19:55:48.036037

"""
from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = '9b29737a8051'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('assemblies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', now())"), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', now())"), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('brands',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('component_type', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('memory_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('socket_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('components',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('brand_id', sa.Integer(), nullable=False),
    sa.Column('model', sa.String(length=100), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('component_type', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', now())"), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', now())"), nullable=True),
    sa.ForeignKeyConstraint(['brand_id'], ['brands.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('model')
    )
    op.create_table('assembly_component_association',
    sa.Column('assembly_id', sa.Integer(), nullable=False),
    sa.Column('component_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['assembly_id'], ['assemblies.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['component_id'], ['components.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('assembly_id', 'component_id')
    )
    op.create_table('cpus',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('socket_type_id', sa.Integer(), nullable=False),
    sa.Column('cores', sa.Integer(), nullable=False),
    sa.Column('threads', sa.Integer(), nullable=False),
    sa.Column('has_integrated_graphics', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['components.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['socket_type_id'], ['socket_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('gpus',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vram', sa.Integer(), nullable=False),
    sa.Column('temperature', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['components.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('motherboards',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('socket_type_id', sa.Integer(), nullable=False),
    sa.Column('memory_type_id', sa.Integer(), nullable=False),
    sa.Column('has_integrated_graphics', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['components.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['memory_type_id'], ['memory_types.id'], ),
    sa.ForeignKeyConstraint(['socket_type_id'], ['socket_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rams',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('memory_type_id', sa.Integer(), nullable=False),
    sa.Column('capacity', sa.Integer(), nullable=False),
    sa.Column('frequency', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['components.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['memory_type_id'], ['memory_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('soundcards',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('channels_quantity', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['components.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('soundcards')
    op.drop_table('rams')
    op.drop_table('motherboards')
    op.drop_table('gpus')
    op.drop_table('cpus')
    op.drop_table('assembly_component_association')
    op.drop_table('components')
    op.drop_table('socket_types')
    op.drop_table('memory_types')
    op.drop_table('brands')
    op.drop_table('assemblies')
    # ### end Alembic commands ###
